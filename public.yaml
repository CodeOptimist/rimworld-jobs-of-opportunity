---
name: Jobs of Opportunity (While You're Up)
packageId: CodeOptimist.JobsOfOpportunity
repo: &repo https://github.com/CodeOptimist/rimworld-jobs-of-opportunity
url: *repo
supportedVersions:
  - 1.1
  - 1.2
incompatibleWith:
  - hoodie.whileyoureup
  - kevlou127.WhileHYouOreHUpHQ1V0S
intro: |-
  Vanilla's opportunistic hauling, only better. Although patched for compatibility, [i]While You're Up[/i] has not changed since 1.0 integrated it. This mod is a direct replacement. Compatible with existing saves. Any load order.
  
  [img]https://i.imgur.com/tbpLbha.gif[/img]
  
header: |+
  A replacement for [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1544626521][i]kevlou's[/i] While You're Up[/url]. Ludeon added opportunistic hauling in 1.0; this mod improves it.

  Vanilla requires a haulable be near your [b]start[/b] position, and its stockpile near your job. Too far and it won't be hauled, [i]even if it's directly in your path[/i]. We can do better.
  
footer: |+


  [h1]Background[/h1]
  I began with the intention to fork While You're Up, until I saw the improved version Ludeon added to the core game. Since WYU appears discontinued, and this in its spirit, I hope to get away with carrying on the name ♥.
  
  These (now adjustable) settings show [url=https://steamuserimages-a.akamaihd.net/ugc/1000305627047582524/6DCE6BD8630614062AADAFAF2C441451BADCDFCF/]how vanilla does opportunistic hauling[/url].
  And for those curious, here are the [url=https://i.imgur.com/eRSl8t0.png]settings for the original While You're Up[/url] (not recommended).
  
  Although tighter than vanilla's, these fewer checks gave his mod extra hauling opportunities even on 1.0, though it triggered on a shorter hardcoded list of jobs.
  Now that these checks are merely [i]preferred[/i], and we trigger for all jobs, it's the best of both worlds!
  
  (If you set [i]allowOpportunisticPrefix[/i] to [i]false[/i] for a JobDef, it won't allow opportunistic jobs. This is a vanilla feature.)
  
features:
  - title: Haul to inventory
    at: 1.4.0
    desc: |-
      Custom control of [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1279012058]Pick Up And Haul[/url] (installed separately)!

      [1.2] Job description will be "Opportunistically gathering", otherwise it's normal PUAH or a different mod.

      Only items qualifying as opportunistic will be hauled: solves issue with spread-out stockpiles and [url=https://youtu.be/97aNVniNlGE]unloading madness[/url].
      (Dedicated haul jobs behave as normal, gathering as much as they can.)

    settings:
      - name: haulToInventory
        title: Haul to inventory (PUAH mod)

  - title: Skip when bleeding
    at: 1.1.0
    steam: (1.0 missed this feature when integrating the original [i]While You're Up[/i])
    desc: |-
      Don't take jobs of opportunity when bleeding.
      "Optimize" settings still apply since they (hopefully) facilitate normal jobs.
    settings:
      - name: skipIfBleeding

  - title: More hauling opportunities
    desc: |-
      By default prefers the proximity requirements set by vanilla, but relaxes them to find valid haulables. Adjustable for performance.
    at: 1.0.0
    settings:
    - name: haulProximities
      title: Haulable & storage initial closeness
      desc: |-
        For performance reasons vanilla doesn't calculate and sort all haul paths, instead it settles for the first found with a haulable near our starting position, and its storage near our job destination. I've made these parameters configurable (marked with ¹).

        Since other parameters do well in limiting travel distance (marked with ²) we can change this from a requirement to simply a preference for closer hauls.

        If performance is an issue, set this stricter to reduce available hauls.
        If straight-line distance poorly represents your actual haul paths, set this stricter and adjust "max region look count"¹.

  - title: Optimize hauling ingredients
    at: 1.6.0
    desc: |-
      If hauling ingredients to storage would bring them closer to their workbench, do that first (grabbing extra).
      
      Disables similar setting in [i]Common Sense[/i] mod.
    settings:
      - name: haulBeforeBill

  - title: &title Optimize hauling supplies
    at: 1.0.0
    desc: &desc |-
      If hauling supplies to storage would bring them closer to their blueprint, do that first (grabbing extra).
    steam_raw: !join ["",
      "[u]", *title, "[/u]\n",
      "[i]If you've ever seen your builder cross the map to retrieve a [/i]single[i] component.[/i]\n",
      *desc, "\n\n",
      "[img]https://i.imgur.com/3QU30W3.png[/img]",
    ]
    settings:
      - name: haulBeforeSupply

  - at: 1.5.1
    desc: |-
      • Compatibility with [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1233893175][i]KV's[/i] Infinite Storage[/url]: [i]Optimize hauling supplies[/i] should now work instead of looping on storage and retrieval.

  - at: 1.5.0
    desc: |-
      • New job descriptions:
      |img:jobReport|caption:If you don't see this, it's standard hauling or a different mod.|
      • Added [i]Enabled[/i] setting for troubleshooting without restarts.
      • Improved settings and descriptions.

  - at: 1.2.0
    desc: |-
      • Hauls are substantially improved on the default "recommended" setting. No longer should distant wood cut or metal mined be neglected.
      (I've integrated the very last vanilla pathing check into this mod's magic.)

      • Setting tooltips updated with detailed descriptions.

  - at: 1.1.0
    desc: |-
      • Updated [i]Optimize hauling supplies[/i]
      Now works as expected: instead of denying the inefficient supply job so [i]some[/i] hauler [i]eventually[/i] hauls, the builder themselves will.

  - at: 1.0.0
    desc: |-
      • Support for [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1279012058][i]Mehni's[/i] Pick Up And Haul[/url]!

  - settings:
      - name: enabled
        title: Enabled
        desc: |-
          Toggle mod without restarting.

          Off is equivalent to disabling all features, resetting each vanilla parameter, and "initial closeness" set to "(vanilla)".

      - name: drawOpportunisticJobs
        title: Draw opportunistic jobs
        desc: |-
          Paths are colored red, green, blue.
          start →ᴿ haulable →ᴳ storage →ᴮ job
  
          (This is vanilla's [i]Development mode → inspector icon → Visibility → Draw Opportunistic Jobs, which is why it doesn't persist through restarts.)[/i]

      - name: haulProximities_Both
        title: Both required (vanilla)
      - name: haulProximities_Either
        title: Either required
      - name: haulProximities_Ignored
        title: Preferred (recommended)
        
      - name: showVanillaParameters
        title: Show core/vanilla parameters…
        desc: |-
          These settings are provided for explaining and tweaking the built-in opportunistic hauling.

          A value of 0 will skip a check.

      - name: maxNewLegsPctOrigTrip
        title: ²Max new legs % of original trip
        _: &dist |-
          This is straight-line distance ("as the crow flies").
        desc: !join ['\n',
          "Max start-to-haulable + storage-to-job % of original trip.",
          *dist
        ]
      - name: maxTotalTripPctOrigTrip
        title: ²Max total trip % of original trip
        desc: *dist

      - name: maxStartToThing
        title: ¹Max start-to-haulable
        desc: *dist
      - name: maxStartToThingPctOrigTrip
        title: ¹Max start-to-haulable % of original trip
        desc: *dist
      - name: maxStartToThingRegionLookCount
        title: ¹Max start-to-haulable region look count
        desc: &region_look_count |-
          This parameter limits our actual pathing.
          To understand it, enable [i]Development mode → inspector icon → Visibility → Draw Regions[/i].
          
          Exploration begins from the start region spreading out to all neighbors until encountering the destination region. This setting caps the total number explored - even those in the wrong direction.
          
          It can't be calculated perfectly from distance, as regions will vary in size and neighbors. (A corridor has only forward and back, so they're explored further.)
          But in a completely open field, if a pawn must travel the distance of n=3 full-sized 12x12 regions (~36 tiles), the algorithm will explore 2(n^2+n)+1 or 25 regions.
      - name: maxStoreToJob
        title: ¹Max storage-to-job
        desc: *dist
      - name: maxStoreToJobPctOrigTrip
        title: ¹Max storage-to-job % of original trip
        desc: *dist
      - name: maxStoreToJobRegionLookCount
        title: ¹Max storage-to-job region look count
        desc: *region_look_count

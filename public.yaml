---
name: Jobs of Opportunity (While You're Up)
packageId: CodeOptimist.JobsOfOpportunity
supportedVersions:
  - 1.1
incompatibleWith:
  - hoodie.whileyoureup
  - kevlou127.WhileHYouOreHUpHQ1V0S
intro: Vanilla's opportunistic hauling, only better. Although patched for compatibility, [i]While You're Up[/i] has not changed since 1.0 integrated it. This mod is a direct replacement and significant improvement. Compatible with existing saves. Any load order.
header: |+
  A replacement for [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1544626521][i]kevlou's[/i] While You're Up[/url], which 1.0 integrated. This mod exposes vanilla's opportunistic hauling settings and improves upon them.

  As a performance optimization, vanilla requires a haulable be near your [b]start[/b] position, and its stockpile near your job. Too far and it won't be hauled, [i]even if it's directly in your path[/i]. We can do better.
  
footer: |+


  [h1]Background[/h1]
  I began with the intention to fork While You're Up, until I saw 1.0 had [i]fully[/i] integrated and improved it. Since it appears discontinued, and this in its spirit, I'm hoping to get away with carrying on the name <3.
  
  These (now adjustable) settings show [url=https://i.imgur.com/h1DNZmz.png]how vanilla does opportunistic hauling[/url].
  And for those curious, here are the [url=https://i.imgur.com/1gn74b3.png]settings for the original While You're Up[/url] (not recommended).
  
  Although tighter than vanilla's, these fewer checks gave his mod extra hauling opportunities even on 1.0, though it triggered on a shorter hardcoded list of jobs.
  Now that these checks are merely [i]preferred[/i], and we trigger for all jobs, it's the best of both worlds!
  
  (If you set [i]allowOpportunisticPrefix[/i] to [i]false[/i] for a JobDef, it won't allow opportunistic jobs. This is a vanilla feature.)
  
features:
  - title: Haul to inventory support
    at: 1.0.0
    desc: Support for [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1279012058][i]Mehni's[/i] Pick Up And Haul[/url]!
    settings:
      - name: haulToInventory

  - title: Skip when bleeding
    at: 1.1.0
    steam: (1.0 missed this feature when integrating the original [i]While You're Up[/i])
    desc: |-
      Don't take jobs of opportunity when bleeding.
    settings:
      - name: skipIfBleeding

  - title: More hauling opportunities
    desc: |-
      By default prefers the proximity requirements set by vanilla, but loosens them to find valid haulables. Adjustable for optimal performance.
    at: 1.0.0
    settings:
    - name: haulProximities
      title: Haulable & storage initial-proximity
      desc: |-
        For performance reasons vanilla doesn't calculate and sort all haul paths, instead it settles for the first found with a haulable and its (storage) destination in range of our original start and original (job) destination, respectively.

        It pays no attention to how close our pawn may pass in the middle of their trip: it checks only the beginning and end.
        
        With this setting we can loosen these requirements in stages to find more hauls while preferring the best.
  
        Although coded as optimally as possible, a second or third look through potential hauls does cost performance, but it's still faster than sorting.
        
        Because other² parameters limit travel distance, a setting of "Ignored" will still give rational hauls (and more than "Both" or "Either") without reducing performance, but a pawn may choose a longer haul over a shorter one, since they are unordered.
    
  - title: Optimize hauling to construction
    at: 1.0.0
    steam: |-
      If you've ever seen your builder cross the map to retrieve a [i]single[/i] component.
    desc: |-
      If [i]and only if[/i] hauling a resource to storage would bring it closer to a blueprint, do that first.
      Haul jobs carry more materials, and with [i]Pick Up And Haul[/i], many more.
    settings:
      - name: haulBeforeSupply

  - at: 1.2.0
    desc: |-
      Hauls are substantially improved on the default "recommended" setting. No longer should distant wood cut or metal mined be neglected.
      
      (I've integrated the very last vanilla pathing check into this mod's magic.)
      Setting tooltips updated with detailed descriptions.

  - at: 1.1.0
    desc: |-
      [b]Updated [i]Optimize hauling to construction[/i][/b]
      Now works as expected: instead of denying the inefficient supply job so [i]some[/i] hauler [i]eventually[/i] hauls, the builder themselves will.
      This feature appears if you've installed [i]Pick Up And Haul[/i].

  - settings:
      - name: drawOpportunisticJobs
        title: Draw opportunistic jobs
        desc: |-
          Paths are colored red, green, blue.
          start →ᴿ haulable →ᴳ storage →ᴮ job
  
          (This is vanilla's [i]Development mode → inspector icon → Visibility → Draw Opportunistic Jobs)[/i]

      - name: haulProximities_Ignored
        title: Ignored
      - name: haulProximities_Either
        title: Either¹
      - name: haulProximities_Both
        title: Both¹ (vanilla)
      - name: haulProximities_EitherThenIgnored
        title: Either¹ → Ignored
      - name: haulProximities_BothThenEither
        title: Both¹ → Either¹
      - name: haulProximities_BothThenEitherThenIgnored
        title: Both¹ → Either¹ → Ignored (recommended)
        
      - name: showVanillaParameters
        title: Show core/vanilla parameters…
        desc: |-
          These settings are provided for explaining and tweaking the built-in opportunistic hauling.
          
          Those marked with ¹ we only check during their phases above. On the "recommended" setting we use these not to limit hauls, but to decide those selected [i]first[/i], and thus they won't merit changing for most users.
          
          Those marked with ² will always apply.
          
          Right click to reset individual parameters. A value of 0 will skip the check.

      - name: maxNewLegsPctOrigTrip
        title: ²Max new legs % of original trip
        _: &dist |-
          This is straight-line distance ("as the crow flies"). Right click to reset.
        desc: !join ['\n',
          "Max start-to-haulable + storage-to-job % of original trip.",
          *dist
        ]
      - name: maxTotalTripPctOrigTrip
        title: ²Max total trip % of original trip
        desc: *dist

      - name: maxStartToThing
        title: ¹Max start-to-haulable
        desc: *dist
      - name: maxStartToThingPctOrigTrip
        title: ¹Max start-to-haulable % of original trip
        desc: *dist
      - name: maxStartToThingRegionLookCount
        title: ¹Max start-to-haulable region look count
        desc: &region_look_count |-
          This parameter limits our actual pathing.
          To understand it, enable [i]Development mode → inspector icon → Visibility → Draw Regions[/i].
          
          Exploration begins from the start region spreading out to all neighbors until encountering the destination region. This setting caps the total number explored - even those in the wrong direction.
          
          It can't be calculated perfectly from distance, as regions will vary in size and neighbors. (A corridor has only forward and back, so they're explored further.)
          But in a completely open field, if a pawn must travel the distance of n=3 full-sized 12x12 regions (~36 tiles), the algorithm will explore 2(n^2+n)+1 or 25 regions.
      - name: maxStoreToJob
        title: ¹Max storage-to-job
        desc: *dist
      - name: maxStoreToJobPctOrigTrip
        title: ¹Max storage-to-job % of original trip
        desc: *dist
      - name: maxStoreToJobRegionLookCount
        title: ¹Max storage-to-job region look count
        desc: *region_look_count
